<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjf.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.gjf.model.Goods">
        <id column="pk_id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="src" jdbcType="VARCHAR" property="src"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="campus" jdbcType="VARCHAR" property="campus"/>
        <result column="time_create" jdbcType="TIMESTAMP" property="timeCreate"/>
        <result column="time_modified" jdbcType="TIMESTAMP" property="timeModified"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM tb_goods
        WHERE pk_id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.gjf.model.Goods">
        INSERT INTO tb_goods (pk_id, user_id, name,
                              src, price, category, description, location,
                              campus, time_create, time_modified
        )
        VALUES (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
                                       #{src,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{category,jdbcType=VARCHAR},
                                       #{description,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR},
                                       #{campus,jdbcType=VARCHAR}, #{timeCreate,jdbcType=TIMESTAMP},
                                       #{timeModified,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.gjf.model.Goods">
        UPDATE tb_goods
        <trim prefix="set" suffixOverrides=",">
            <if test="price!=null">price = #{price,jdbcType=VARCHAR},</if>
            <if test="name!=null">name = #{name,jdbcType=VARCHAR},</if>
            <if test="category!=null">category = #{category,jdbcType=TINYINT},</if>
            <if test="location!=null">location = #{location,jdbcType=TINYINT},</if>
            <if test="timeModified!=null">time_modified = #{timeModified,jdbcType=TIMESTAMP}</if>
        </trim>
        WHERE pk_id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        pk_id,
        user_id,
        name,
        src,
        price,
        category,
        description,
        location,
        campus,
        time_create,
        time_modified
        FROM tb_goods
        WHERE pk_id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectGoodsAndUserByGoodsId" parameterType="java.lang.Long" resultType="java.util.HashMap">
        SELECT
            tb_goods.pk_id goodId,
            user_id sellerId,
            tb_user.nickname sellerName,
            tb_user.head_img sellerImg,
            tb_goods.name goodsName,
            src,
            price,
            category,
            description,
            tb_goods.location,
            tb_goods.campus,
            tb_goods.time_create goodsCreate,
            tb_goods.time_modified
        FROM tb_goods,tb_user
        WHERE tb_goods.pk_id = #{id,jdbcType=BIGINT} AND tb_goods.user_id = tb_user.pk_id
    </select>
    <select id="getGoodsCountByUserId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT count(user_id)
        FROM tb_goods
        WHERE user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="getGoodsByCategory" parameterType="java.lang.String" resultType="java.util.HashMap">
        SELECT
            pk_id,
            name,
            src,
            price,
            category,
            description,
            location,
            campus,
            time_create
        FROM tb_goods
        WHERE category = #{category,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            pk_id,
            user_id,
            name,
            src,
            price,
            category,
            description,
            location,
            campus,
            time_create,
            time_modified
        FROM tb_goods
    </select>
    <select id="getRecentlyGoods" parameterType="java.lang.String" resultType="java.util.HashMap">
        SELECT
            pk_id,
            name,
            src,
            price,
            category,
            description,
            location,
            campus,
            time_create
        FROM tb_goods
        ORDER BY time_create DESC
    </select>

    <select id="selectRenderAll" resultType="java.util.HashMap">
        SELECT
        a.pk_id goodsId,
        a.name goodsName,
        b.nickname userName,
        a.src src,
        a.location location,
        b.phone phone,
        a.price price,
        a.category category,
        a.time_create createTime
        FROM tb_goods a,tb_user b
        WHERE a.user_id = b.pk_id
        <if test="searchKey != null">
            AND a.${searchKey} like '%${searchValue}%'
        </if>
        LIMIT #{page},#{limit}
    </select>
</mapper>